// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String            @id @default(uuid())
  parent_id                String?
  parent                   User?             @relation("ParentChilds", fields: [parent_id], references: [id])
  childs                   User[]            @relation("ParentChilds")
  permissions              user_permission[]
  phone                    String            @unique
  email                    String            @unique
  first_name               String?
  last_name                String?
  birthday                 DateTime?
  place_Birth              String?
  cni_umber                String?
  image                    String?
  password                 String
  roleId                   Int
  grade_id                 Int?
  grade                    Grade?            @relation(fields: [grade_id], references: [id])
  driver_type_id           Int?
  driver_type              DriverType?       @relation(fields: [driver_type_id], references: [id])
  city_id                  Int?
  city                     City?             @relation(fields: [city_id], references: [id])
  role                     Role              @relation(fields: [roleId], references: [id])
  token                    Token[]           @relation(name: "token_user_ship")
  tags                     UsersOnTags[]
  account_id               String?
  account                  Account?           @relation(fields: [account_id], references: [id])
  driver_licence_number    String?
  driver_licence_type      String?
  country_licence_delivery String?
  issue_delivery_on        DateTime?
  expire_delivery_at       DateTime?
  daily_recipe             Int?
  currency                 String?
  blocked_at               DateTime?
  verified_at              DateTime?
  deleted_at               DateTime?
  created_at               DateTime          @default(now())
  updated_at               DateTime          @updatedAt
}

model Account {
  id           String    @id @default(uuid())
  status       Boolean   @default(false)
  activated_at DateTime?
  vehicles     Vehicle[]
  users        User[]
  created_at   DateTime  @default(now())
  blocked_at   DateTime?
  updated_at   DateTime  @updatedAt
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Vehicle {
  id                        Int          @id @default(autoincrement())
  account_id                String
  account                   Account      @relation(fields: [account_id], references: [id])
  chassis_number            String
  color_id                  Int
  color                     carColor     @relation(fields: [color_id], references: [id])
  brand_id                  Int
  brand                     Brand        @relation(fields: [brand_id], references: [id])
  gps_number                String?
  registration_number       String
  insurance_subscription_at DateTime
  circulation_at            DateTime
  entry_fleet_at            DateTime
  mileage                   Int
  contract_type             String
  images                    Image[]
  owner_id                  Int
  owner                     VehicleOwner @relation(fields: [owner_id], references: [id])
}

model VehicleOwner {
  id                     Int       @id @default(autoincrement())
  first_name             String
  last_name              String
  cni_number             String
  driver_licence__number String
  vehicles               Vehicle[]
}

model Brand {
  id      Int        @id @default(autoincrement())
  name    String
  vehicle Vehicle[]
  model   CarModel[]
}

model Image {
  id         Int     @id @default(autoincrement())
  path       String
  vehicle_id Int
  vehicle    Vehicle @relation(fields: [vehicle_id], references: [id])
}

model CarModel {
  id       Int    @id @default(autoincrement())
  name     String
  brand_id Int
  brand    Brand  @relation(fields: [brand_id], references: [id])
}

model carColor {
  id      Int       @id @default(autoincrement())
  name    String
  vehicle Vehicle[]
}

model City {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model DriverType {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Grade {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Tag {
  id    Int           @id @default(autoincrement())
  name  String
  users UsersOnTags[]
}

model UsersOnTags {
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])
  tag_id      Int
  tag         Tag      @relation(fields: [tag_id], references: [id])
  assigne_at  DateTime @default(now())
  assigned_by String?

  @@id([user_id, tag_id])
}

model Token {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id], name: "token_user_ship")
  jwt       String
  expireIn  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model permission {
  name  String            @id
  users user_permission[]
}

model user_permission {
  user_id       String
  user          User       @relation(fields: [user_id], references: [id])
  permission_id String
  permission    permission @relation(fields: [permission_id], references: [name])

  @@id([user_id, permission_id])
}

model Otp {
  id        Int    @id @default(autoincrement())
  otp       Int
  userEmail String
  expiredIn Int
}

model Password {
  id          Int      @id @default(autoincrement())
  userEmail   String
  newPassword String
  createdAt   DateTime @default(now())
}
