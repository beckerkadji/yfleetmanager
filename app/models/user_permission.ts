import {PrismaClient} from '@prisma/client'
import {PERMISSION} from './permission'
import {ROLE_HR} from './role'

const prisma = new PrismaClient()

export const root_permission = Object.values(PERMISSION).map( permission => permission)

export const admin_permission = [
    PERMISSION.ADD_DRIVER,
    PERMISSION.READ_DRIVER,
    PERMISSION.EDIT_DRIVER,
    PERMISSION.BLOCK_DRIVER,
    PERMISSION.READ_SESSION,
    PERMISSION.LOGOUT_SESSION,
    PERMISSION.ADD_VEHICLE,
    PERMISSION.READ_VEHICLE,
    PERMISSION.EDIT_PLANNING_DRIVER,
    PERMISSION.DISABLED_VEHICLE,
    PERMISSION.TRANSFER_MANAGE,
    PERMISSION.PLANNING_MANAGE,
    PERMISSION.ACCOUNTING_MANAGE,
    PERMISSION.MAINTENANCE_MANAGE
]

export const owner_permission = [
    PERMISSION.ADD_DRIVER,
    PERMISSION.READ_DRIVER,
    PERMISSION.EDIT_DRIVER,
    PERMISSION.BLOCK_DRIVER,
    PERMISSION.READ_SESSION,
    PERMISSION.LOGOUT_SESSION,
    PERMISSION.ADD_VEHICLE,
    PERMISSION.READ_VEHICLE,
    PERMISSION.EDIT_PLANNING_DRIVER,
    PERMISSION.DISABLED_VEHICLE,
    PERMISSION.TRANSFER_MANAGE,
    PERMISSION.PLANNING_MANAGE,
    PERMISSION.ACCOUNTING_MANAGE,
    PERMISSION.MAINTENANCE_MANAGE,
    PERMISSION.ADD_ADMIN,
    PERMISSION.READ_ADMIN,
    PERMISSION.EDIT_ADMIN,
    PERMISSION.BLOCK_ADMIN,
    PERMISSION.EDIT_VEHICLE,
    PERMISSION.DELETE_VEHICLE,
    PERMISSION.DELETE_DRIVER,
    PERMISSION.DELETE_ADMIN,
    PERMISSION.ADD_PERMISSION,
    PERMISSION.REMOVE_PERMISSION,
    PERMISSION.CHANGE_ROLE,
]

export const agent_permission = [
    PERMISSION.READ_DRIVER,
    PERMISSION.BLOCK_DRIVER,
    PERMISSION.READ_SESSION,
    PERMISSION.EDIT_PLANNING_DRIVER,
    PERMISSION.READ_VEHICLE,
    PERMISSION.DISABLED_VEHICLE,
    PERMISSION.TRANSFER_MANAGE,
    PERMISSION.PLANNING_MANAGE,
    PERMISSION.MAINTENANCE_MANAGE,
    PERMISSION.ADD_AGENT,
    PERMISSION.READ_AGENT
]

export const driver_permission = [
    PERMISSION.ADD_TARGET,
    PERMISSION.EDIT_TARGET,
    PERMISSION.REMOVE_TARGET
]


export const right_permission = (role : ROLE_HR) : PERMISSION[] => {
    switch (role){
        case ROLE_HR.ROOT:
            return root_permission
        case ROLE_HR.OWNER:
            return owner_permission
        case ROLE_HR.ADMIN:
            return admin_permission
        case ROLE_HR.DRIVER:
            return driver_permission
        case ROLE_HR.AGENT:
            return agent_permission
        default:
            throw new Error("Incorrect role asking")
    }
}

export const UserPermissionModel = prisma.user_permission;